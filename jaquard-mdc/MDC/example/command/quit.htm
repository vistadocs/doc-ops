
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<html>
<title>M[UMPS] Commands</title>
<body background="../mbe.gif">
<h1>M[UMPS] Commands</h1>

<h2>Q[UIT]</h2>

<p>Introduced in the 1977 ANSI M[UMPS] language standard.<br>
<tt><br>
&nbsp;<b>WRITE</b> 1 <b>DO</b> SUB <b>WRITE</b> 2<br>
&nbsp;...<br>
<b>SUB</b> ;<br>
&nbsp;; ... check processing conditions<br>
&nbsp;<b>IF</b> PROBLEMS <b>QUIT</b><br>
&nbsp;; ... process data<br>
&nbsp;<b>QUIT</b></tt><br>
In this example, the value 1 is written, then the subroutine is
invoked. The subroutine starts out checking whether all
conditions are met that are needed for it to function properly.
If not all conditions are met, the first <b>QUIT</b> command is
executed, and control reverts back to the calling program, i.e.
the command <tt><b>WRITE</b> 2</tt> is executed.<br>
Otherwise, the rest of the subroutine is executed, and the final
<b>QUIT</b> command is processed eventually, after which control
reverts to the calling routine and the command <tt><b>WRITE</b>
2</tt> is executed.</p>

<p><tt><b>SET</b> S="" <b>FOR&nbsp;&nbsp;SET</b>
X=<b>$ORDER</b>(DATA(S))
<b>QUIT</b>:S=""&nbsp;&nbsp;<b>DO</b><br>
. ; process one occurrence of DATA(S)<br>
. <b>QUIT</b></tt><br>
In this example, the second <b>QUIT</b> command is very much like
the <b>QUIT</b> commands in the previous example, but the first
<b>QUIT</b> command, the one on the same line as the <b>FOR</b>
command, is used to terminate a loop that would otherwise
continue forever.</p>

<p>Addition in the 1990 ANSI M[UMPS] language standard.<tt><br>
&nbsp;<b>SET</b> X=$$ADD(13,45)<br>
&nbsp;...<br>
&nbsp;<b>QUIT</b><br>
&nbsp;;<br>
ADD(P,Q) <b>QUIT</b> P+Q</tt><br>
In the case of an extrinsic function call, the value to be
returned to the calling program is specified as the argument of
the <b>QUIT</b> command that returns control back to that calling
program.<br>
<tt><br>
&nbsp;;...<br>
&nbsp;<b>SET</b> X=$$A()<br>
&nbsp;<b>QUIT</b><br>
A() <b>FOR&nbsp;&nbsp;QUIT</b> 1<br>
&nbsp;<b>QUIT</b> 2</tt><br>
This example will yield an error (<a href="../mdcerror.htm#M16">M16</a>) when the command
<tt><b>QUIT</b> 1</tt> is encountered in the context of the
<b>FOR</b> loop.<br>
<tt><br>
&nbsp;;...<br>
&nbsp;<b>SET</b> SPECIES="Fowl",GENDER="F"<br>
&nbsp;<b>WRITE</b> $$SUB(SPECIES,GENDER)<br>
&nbsp;<b>QUIT</b><br>
&nbsp;;<br>
SUB(SP,GN) <b>IF</b> SP="Fowl" <b>DO</b><br>
&nbsp;. <b>IF</b> GN="F" <b>QUIT</b> "Hen"<br>
&nbsp;. <b>ELSE&nbsp;&nbsp;QUIT</b> "Cock"<br>
&nbsp;<b>ELSE&nbsp;&nbsp;QUIT</b> "Don't know"</tt><br>
This example will cause an error (<a href="../mdcerror.htm#M16">M16</a>) at the command
<tt><b>QUIT</b> "Hen"</tt>.<br>
The indented block is not called as an extrinsic function, and
hence cannot return a value.<br>
<tt><br>
&nbsp;<b>SET</b> INCOME=250000,DEPENDENTS=3 <b>DO</b> TAX<br>
&nbsp;<b>QUIT</b><br>
&nbsp;;<br>
TAX <b>SET</b> TAX=0 <b>DO</b><br>
&nbsp;. <b>IF</b> INCOME&gt;5000 <b>DO</b><br>
&nbsp;. . <b>IF</b> DEPENDENTS&gt;0 <b>QUIT</b><br>
&nbsp;. . <b>SET</b> TAX=(INCOME-5000)*0.05<br>
&nbsp;. <b>IF</b> INCOME&gt;50000 <b>DO</b><br>
&nbsp;. . <b>IF</b> DEPENDENTS&gt;2 <b>QUIT</b><br>
&nbsp;. . <b>SET</b> TAX=TAX+(INCOME-50000)*0.1<br>
&nbsp;. <b>IF</b> INCOME&gt;200000 <b>DO</b><br>
&nbsp;. . <b>IF</b> DEPENDENTS&gt;4 <b>QUIT</b><br>
&nbsp;. . <b>SET</b> TAX=TAX+(INCOME-200000)*0.2<br>
&nbsp;<b>WRITE</b> "TAX=",TAX<br>
&nbsp;<b>QUIT</b></tt><br>
Because the number of dependents is 3 (more than 0 or 2), the
first two blocks <tt>(INCOME&gt;5000</tt> and
<tt>INCOME&gt;50000</tt>) have no effect. The third block adds
(250000-200000*.02)=10000 to <tt>TAX</tt> (which still is 0), so
that the amount written will be <tt>10000</tt>.<br>
The <b>QUIT</b> commands in the indented blocks with two dots at
the start of the line only terminate the 'two dot' level, and
return control to the 'one dot' level.</p>

<p>Addition in the 1995 ANSI M[UMPS] language standard.</p>

<p>Argument indirection is allowed to return a value from a
function:<br>
<tt><b>QUIT</b> @ARGUMENT</tt></p>

<p><tt><b>FOR</b> K=1:1:100 <b>QUIT</b>:condition VALUE <b>DO</b> something</tt><br>
An occurrence of a <b>QUIT</b> command with an argument
in the scope of a <b>FOR</b> command will cause an error
(<a href="../mdcerror.htm#M16">M16</a>).</p>

<p>Examples with naked references:</p>

<p><b>QUIT</b> VALUE<br>
<tt><b>SET</b> ^ABC(1,2)="reset naked indicator"</tt><br>
; Naked indicator is now <tt>^ABC(1,<br>
<b>QUIT</b> ^(3,4)</tt><br>
; Naked indicator is now: <tt>^ABC(1,3,</tt><br>
; Actual reference is: <tt>^ABC(1,3,4)</tt></p>

<hr>

<p>This document is &copy; Ed de Moel, 1995-2005.<br>
It is part of a book by Ed de Moel that is published under
the title "M[UMPS] by Example" (ISBN 0-918118-42-5).<br>
Printed copies of the book are no longer available.</p>

<p>This document describes the various commands that are defined
in the M[UMPS] language standard (ANSI X11.1, ISO 11756).</p>

<p><b><i>The information in this document is NOT authoritative
and subject to be modified at any moment.<br>
Please consult the appropriate (draft) language standard for an
authoritative definition.</i></b></p>

<p><b><i>In this document, information is included that will
appear in
future standards.<br>
The MDC cannot guarantee that these 'next'
standards will indeed appear.</i></b></p>
</body></html>
